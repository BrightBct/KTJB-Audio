<xs:schema	xmlns="https://www.w3schools.com"
			xmlns:xs="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://spotify.com/services/music/xsd/">
		
		<xs:include schemaLocation="ArtistsService.xsd"/>

		<!--Reuse ComplexType-->
			<!--Return Music-->
		<xs:complexType name="music">
			<xs:sequence>
				<xs:element name="music" type="musicType"/>
			</xs:sequence>
		</xs:complexType>
		
			<!--Send music boolean-->
			<!--false is not play music-->
			<!--true is play music-->
		<xs:complexType name="musicStatus">
			<xs:sequence>
				<xs:element name="musicBoolean" type="boolean" minOccurs="1" maxOccurs="1" default="false"/>
			</xs:sequence>
		</xs:complexType>
		
			<!--Send next music boolean-->
			<!--false is play next music by free plan-->
			<!--true is play next music by premium plan-->
		<xs:complexType name="nextMusicStatus">
			<xs:sequence>
				<xs:element name="nextMusicBoolean" type="boolean" minOccurs="1" maxOccurs="1" default="false"/>
			</xs:sequence>
		</xs:complexType>
		
			<!--Send loop music int value-->
			<!--0 is not loop-->
			<!--1 is loop one music-->
			<!--2 is loop all music in list-->
		<xs:complexType name="loopMusicStatus">
			<xs:sequence>
				<xs:element name="loopMusicBoolean" type="integer" minOccurs="1" maxOccurs="1" default="0"/>
			</xs:sequence>
		</xs:complexType>
		
			<!--Send shuffle music boolean-->
			<!--false is not shuffle-->
			<!--true is shuffle-->
		<xs:complexType name="shuffleMusicStatus">
			<xs:sequence>
				<xs:element name="shuffleMusicBoolean" type="integer" minOccurs="1" maxOccurs="1" default="false"/>
			</xs:sequence>
		</xs:complexType>
		
		<!-- Reuse Element Output-->
		<xs:element name="MusicOutput" type="music" minOccurs="1" maxOccurs="1"/>
		<xs:element name="MusicListOutput" type="music" minOccurs="1" maxOccurs="unbounded"/>
		
		<!--OP1 PlayMusic-->
			<!--Input-->
		<xs:element name="playMusicInput" type="musicStatus" fixed="true"/>
			<!--Output-->
				<!--In reuse element output name is "MusicOutput"-->
		
		<!--OP2 StopMusic-->
			<!--Input-->
		<xs:element name="stopMusicInput" type="musicStatus" fixed="false"/>
			<!--Output-->
				<!--In reuse element output name is "MusicOutput"-->
		
		<!--OP3 NextMusicFreePlan-->
			<!--Input-->
		<xs:element name="nextMusicFreePlanInput" type="nextMusicStatus" fixed="false"/>
			<!--Output-->
				<!--In reuse element output name is "MusicOutput"-->
		
		<!--OP4 NextMusicPremiumPlan-->
			<!--Input-->
		<xs:element name="nextMusicPremiumPlanInput" type="nextMusicStatus" fixed="true"/>
			<!--Output-->
				<!--In reuse element output name is "MusicOutput"-->
		
		<!--OP5 StartLoopMusic-->
			<!--Input-->
		<xs:element name="startLoopMusicInput" type="loopMusicStatus"/>
			
		<!--OP6 StopLoopMusic-->
			<!--Input-->
		<xs:element name="stopLoopMusicInput" type="loopMusicStatus" fixed="0"/>
					
		<!--OP7 RandomMusic-->
			<!--Output-->
				<!--In reuse element output name is "MusicListOutput"-->
				
		<!--OP8 StartShuffleMusic-->
			<!--Input-->
		<xs:element name="startShuffleMusicInput" type="shuffleMusicBoolean"/>
		
		<!--OP9 StopShuffleMusic-->
			<!--Input-->
		<xs:element name="stopShuffleMusicInput" type="shuffleMusicBoolean"/>
				
		<!--OP10 ShowMusicList-->
			<!--Output-->
				<!--In reuse element output name is "MusicListOutput"-->
			
		<!--OP11 ShareMusic-->
			<!--Output-->
		<xs:element name="shareMusicOutput" type="shareMusicOutputType"/>
		<xs:complexType name="shareMusicOutputType">
			<xs:all>
				<xs:choice>
					<xs:element name="musicURL" minOccurs="1" maxOccurs="1">
						<xs:simpleType>
							<xs:restriction base="xs:anyURI">
								<xs:pattern value="https://.+"/>
							</xs:restriction>
						</xs:simpleType>
					<xs:element name="embed" type="string" minOccurs="1" maxOccurs="1"/>
				</xs:choice>
			</xs:all>
		</xs:complexType>
		
		<!--OP12 ShowMusicDetail-->
			<!--Output-->
		<xs:element name="showMusicDetailOutput" type="musicInfoType"/>
		
</xs:schema>